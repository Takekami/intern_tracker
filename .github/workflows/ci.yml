name: Backend CI

on:
  push:
    branches: [ main ]

concurrency:
  group: backend-deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: self-hosted
    timeout-minutes: 25
    strategy:
      matrix: { node-version: [22] }

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: yarn
          cache-dependency-path: |
            backend/yarn.lock
            frontend/yarn.lock

      - name: Enable Corepack (Yarn)
        run: corepack enable

      # --- .env をテスト前に作る ---
      - name: Create backend .env from secrets
        working-directory: ./backend
        run: |
          set -euo pipefail
          : > .env
          printf "MONGO_URI=%s\n" "${{ secrets.MONGO_URI }}" >> .env
          printf "JWT_SECRET=%s\n" "${{ secrets.JWT_SECRET }}" >> .env
          printf "PORT=%s\n"       "${{ secrets.PORT }}"       >> .env
          awk -F= '{print "KEY:", $1}' .env
          grep -qE '^MONGO_URI=.+$' .env || { echo "MONGO_URI is empty in .env"; exit 1; }

      - name: Install backend deps
        working-directory: ./backend
        run: yarn install --frozen-lockfile

      - name: Run backend tests
        working-directory: ./backend
        env:
          NODE_ENV: test
          MONGO_URI: ${{ secrets.MONGO_URI }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          PORT: ${{ secrets.PORT }}
        run: |
          node -e "console.log('MONGO len:', (process.env.MONGO_URI||'').length)"  # 長さだけ確認
          yarn test

      # ---- 以下はデプロイ（必要なら）----
      - name: Install frontend deps
        working-directory: ./frontend
        run: yarn install --frozen-lockfile

      - name: Build frontend
        working-directory: ./frontend
        run: yarn build

      - name: Stop old PM2 apps (safe)
        run: |
          pm2 delete Frontend || true
          pm2 delete backend  || true

      - name: Start Frontend (static) on 3000
        working-directory: ./frontend
        run: pm2 serve ./build 3000 --name Frontend --spa

      - name: Start Backend with PM2
        working-directory: ./backend
        env:
          MONGO_URI: ${{ secrets.MONGO_URI }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          PORT: ${{ secrets.PORT }}
        run: pm2 start ./server.js --name backend --update-env

      - run: pm2 save
